//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using CoreGame;
using UnityEngine;

namespace RTPuzzle
{


    public class InteractiveObjectCutsceneControllerModule : RTPuzzle.InteractiveObjectModule
    {

        private InteractiveObjectType ParentInteractiveObjectType;

        #region Module Dependencies
        private ModelObjectModule ModelObjectModule;
        #endregion

        private InteractiveObjectCutsceneController interactiveObjectCutsceneController;

        internal InteractiveObjectCutsceneController InteractiveObjectCutsceneController { get => interactiveObjectCutsceneController; }

        public void Init(InteractiveObjectType InteractiveObjectType)
        {
            this.ModelObjectModule = InteractiveObjectType.GetModule<ModelObjectModule>();
            this.ParentInteractiveObjectType = InteractiveObjectType;
            this.interactiveObjectCutsceneController = new InteractiveObjectCutsceneController(this.ModelObjectModule, this.ParentInteractiveObjectType);
        }

        public void Tick(float d, float timeAttenuationFactor)
        {
            this.interactiveObjectCutsceneController.Tick(d);
        }
    }

    class InteractiveObjectCutsceneController : AbstractCutsceneController
    {
        public InteractiveObjectCutsceneController(ModelObjectModule ModelObjectModule, InteractiveObjectType InteractiveObjectType)
        {
            #region Data Components Dependencies
            var PlayerInputMoveManagerComponentV2 = InteractiveObjectType.TransformMoveManagerComponent;
            #endregion

            var Rigidbody = InteractiveObjectType.GetComponent<Rigidbody>();
            var Animator = ModelObjectModule.Animator;

            base.BaseInit(Rigidbody, null, Animator, PlayerInputMoveManagerComponentV2, null);
        }
    }
}
