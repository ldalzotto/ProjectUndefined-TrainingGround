//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RTPuzzle
{
    using System;
    using UnityEngine;


    public class AIDisarmObjectManager : AbstractAIDisarmObjectManager
    {

        private bool isDisarmingObject;

        #region External Dependencies
        private DisarmObjectModule disarmingObject;
        #endregion

        #region External Events
        public override void OnDisarmingObjectStart(DisarmObjectModule disarmingObject)
        {
            this.disarmingObject = disarmingObject;
            this.isDisarmingObject = true;
        }
        public override void OnDisarmingObjectExit(DisarmObjectModule disarmingObject)
        {
            if (this.disarmingObject == disarmingObject)
            {
                this.disarmingObject = null;
                this.isDisarmingObject = false;
            }
        }
        #endregion

        public void Init()
        {
        }

        public override void BeforeManagersUpdate(float d, float timeAttenuationFactor)
        {
        }

        public override bool IsManagerEnabled()
        {
            return this.disarmingObject != null && this.isDisarmingObject;
        }

        public override Nullable<Vector3> OnManagerTick(float d, float timeAttenuationFactor)
        {
            this.disarmingObject.IncreaseTimeElapsedBy(d * timeAttenuationFactor);
            return this.disarmingObject.transform.position;
        }

        public override void OnDestinationReached()
        {
        }

        public override void OnStateReset()
        {
            this.isDisarmingObject = false;
        }
    }
}
