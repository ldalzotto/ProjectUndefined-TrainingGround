//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


using GameConfigurationID;
using System.Collections.Generic;

namespace RTPuzzle
{
    
    public class InRangeVisualFeedbackModule : InteractiveObjectModule, IInRangeVisualFeedbackModuleDataRetriever, RangeTypeObjectEventListener
    {
        public RangeTypeObject InRangeVisualFeedbackTrackerRange;

        public override void Init(InteractiveObjectInitializationObject interactiveObjectInitializationObject, IInteractiveObjectTypeDataRetrieval IInteractiveObjectTypeDataRetrieval,
                IInteractiveObjectTypeEvents IInteractiveObjectTypeEvents)
        {
            this.ResolveInternalDependencies();

            RangeTypeObjectInitializer InRangeVisualFeedbackTrackerRangeInitializationData = null;
            var InRangeVisualFeedbakcModuleInitializationData = interactiveObjectInitializationObject.InRangeVisualFeedbakcModuleInitializationData;
            if (interactiveObjectInitializationObject != null && interactiveObjectInitializationObject.InRangeVisualFeedbakcModuleInitializationData != null)
            {
                InRangeVisualFeedbackTrackerRangeInitializationData = interactiveObjectInitializationObject.InRangeVisualFeedbakcModuleInitializationData.RangeInitializer;
            }
            this.InRangeVisualFeedbackTrackerRange.Init(InRangeVisualFeedbackTrackerRangeInitializationData, new List<RangeTypeObjectEventListener>() { this });
        }

        private List<IAILogicColliderModuleDataRetriever> inRangeCollidersForVisual = new List<IAILogicColliderModuleDataRetriever>();

        #region IInRangeVisualFeedbackModuleDataRetriever
        public IAILogicColliderModuleDataRetriever[] GetInRangeCollidersForVisual()
        {
            IAILogicColliderModuleDataRetriever[] InRangeAndNotOccludedCollider = new IAILogicColliderModuleDataRetriever[this.inRangeCollidersForVisual.Count];

            for(var i = 0; i < this.inRangeCollidersForVisual.Count; i++)
            {
                if(this.InRangeVisualFeedbackTrackerRange.RangeType.IsInsideAndNotOccluded(this.inRangeCollidersForVisual[i].GetCollider(), forceObstacleOcclusionIfNecessary: false))
                {
                    InRangeAndNotOccludedCollider[i] = this.inRangeCollidersForVisual[i];
                }
            }
            return InRangeAndNotOccludedCollider;
        }
        public RangeTypeID GetAssociatedRangeTypeID()
        {
            return this.InRangeVisualFeedbackTrackerRange.RangeType.RangeTypeID;
        }
        #endregion

        public void ResolveInternalDependencies()
        {
            this.InRangeVisualFeedbackTrackerRange = GetComponentInChildren<RangeTypeObject>();
        }

        public override void OnInteractiveObjectDestroyed()
        {
            this.InRangeVisualFeedbackTrackerRange.OnRangeDestroyed();
        }

        public void Tick(float d, float timeAttenuationFactor)
        {
        }

        public void OnRangeTriggerEnter(CollisionType other)
        {
            if (other != null && other.IsAI)
            {
                var IAILogicColliderModuleDataRetriever = AILogicColliderModule.AILogicColliderModuleFromCollisionType(other);
                if (IAILogicColliderModuleDataRetriever != null)
                {
                    this.inRangeCollidersForVisual.Add(IAILogicColliderModuleDataRetriever);
                }
            }
        }

        public void OnRangeTriggerExit(CollisionType other)
        {
            if (other != null && other.IsAI)
            {
                var IAILogicColliderModuleDataRetriever = AILogicColliderModule.AILogicColliderModuleFromCollisionType(other);
                if (IAILogicColliderModuleDataRetriever != null)
                {
                    this.inRangeCollidersForVisual.Remove(IAILogicColliderModuleDataRetriever);
                }
            }
        }
    }

    public class InRangeVisualFeedbakcModuleInitializationData
    {
        public RangeTypeObjectInitializer RangeInitializer;
    }
}