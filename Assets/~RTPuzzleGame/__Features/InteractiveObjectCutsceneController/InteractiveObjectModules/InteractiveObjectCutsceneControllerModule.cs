//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using CoreGame;

namespace RTPuzzle
{

    /*
    public class InteractiveObjectCutsceneControllerModule : RTPuzzle.InteractiveObjectModule
    {

        private InteractiveObjectCutsceneController interactiveObjectCutsceneController;

        internal InteractiveObjectCutsceneController InteractiveObjectCutsceneController { get => interactiveObjectCutsceneController; }

        public override void Init(InteractiveObjectInitializationObject interactiveObjectInitializationObject, IInteractiveObjectTypeDataRetrieval IInteractiveObjectTypeDataRetrieval,
            IInteractiveObjectTypeEvents IInteractiveObjectTypeEvents)
        {
            this.interactiveObjectCutsceneController = new InteractiveObjectCutsceneController(IInteractiveObjectTypeDataRetrieval.GetModelObjectModule(), interactiveObjectInitializationObject);
        }

        public void Tick(float d, float timeAttenuationFactor)
        {
            this.interactiveObjectCutsceneController.Tick(d);
        }

        #region Logical Conditions
        public bool IsCutscenePlaying() { return this.interactiveObjectCutsceneController.IsCutscenePlaying(); }
        #endregion
    }

    class InteractiveObjectCutsceneController : AbstractCutsceneController
    {
        public InteractiveObjectCutsceneController(ModelObjectModule ModelObjectModule, InteractiveObjectInitializationObject InteractiveObjectInitializationObject)
        {
            base.BaseInit(ModelObjectModule.AssociatedRigidbody, ModelObjectModule.AssociatedAgent, ModelObjectModule.Animator, InteractiveObjectInitializationObject.TransformMoveManagerComponent.InteractiveObjectSharedDataTypeInherentData.TransformMoveManagerComponent, null);
        }
    }
    */
}
