//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using CoreGame;
using GameConfigurationID;
using System.Collections.Generic;
using UnityEngine;

namespace RTPuzzle
{
    public class NearPlayerGameOverTriggerModule : RTPuzzle.InteractiveObjectModule
    {
        public NearPlayerGameOverTriggerID NearPlayerGameOverTriggerID;

        #region External Dependencies
        private BlockingCutscenePlayerManager BlockingCutscenePlayer;
        private PuzzleEventsManager PuzzleEventsManager;
        private PuzzleGameConfigurationManager PuzzleGameConfigurationManager;
        #endregion

        private InteractiveObjectType InteractiveObjectTypeRef;
        private NearPlayerGameOverTriggerInherentData NearPlayerGameOverTriggerInherentData;

        public override void Init(InteractiveObjectInitializationObject interactiveObjectInitializationObject, IInteractiveObjectTypeDataRetrieval IInteractiveObjectTypeDataRetrieval, 
            IInteractiveObjectTypeEvents IInteractiveObjectTypeEvents)
        {
            this.BlockingCutscenePlayer = PuzzleGameSingletonInstances.BlockingCutscenePlayer;
            this.PuzzleEventsManager = PuzzleGameSingletonInstances.PuzzleEventsManager;
            this.PuzzleGameConfigurationManager = PuzzleGameSingletonInstances.PuzzleGameConfigurationManager;

            this.NearPlayerGameOverTriggerInherentData = PuzzleGameConfigurationManager.NearPlayerGameOverTriggerConfiguration()[this.NearPlayerGameOverTriggerID];

            this.GetComponent<SphereCollider>().radius = this.NearPlayerGameOverTriggerInherentData.NearPlayerDetectionRadius;

            this.InteractiveObjectTypeRef = (InteractiveObjectType)IInteractiveObjectTypeDataRetrieval;
        }
        

        private void OnCutsceneEnd()
        {
            this.PuzzleEventsManager.PZ_EVT_LevelReseted();
        }
    }
}
